version: '3'

services:
  app:
    container_name: app
    build: .
    volumes:
      - ./:/app
    ports:
      - ${WEB_SERVER_PORT:-8000}:${WEB_SERVER_PORT:-8000}  # HTTP Server
      - ${GRPC_SERVER_PORT:-50051}:${GRPC_SERVER_PORT:-50051}  # gRPC Server
      - ${GRAPHQL_SERVER_PORT:-8080}:${GRAPHQL_SERVER_PORT:-8080}  # GraphQL Server
    environment:
      - WEB_SERVER_PORT=${WEB_SERVER_PORT:-8000}
      - GRPC_SERVER_PORT=${GRPC_SERVER_PORT:-50051}
      - GRAPHQL_SERVER_PORT=${GRAPHQL_SERVER_PORT:-8080}
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
    volumes:
      - mysql_db_data:/var/lib/mysql
      - .docker/initdb:/docker-entrypoint-initdb.d

  migrate:
    image: migrate/migrate
    container_name: migrate-runner
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./database/migrations/:/migrations
    command: ["-path", "/migrations/", "-database", "mysql://${DB_USER}:${DB_PASSWORD}@tcp(mysql:3306)/orders", "up"]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 3

  app-prd:
    container_name: app-prd
    build: .
    ports:
      - "8000:8000"
      - "50051:50051"
      - "8080:8080"
    # depends_on:
    #   mysql:
    #     condition: service_healthy
    #   rabbitmq:
    #     condition: service_healthy
    profiles:
      - prd

volumes:
    mysql_db_data:
